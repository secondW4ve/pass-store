{"ast":null,"code":"var _jsxFileName = \"/home/wave/JS tutorials/PasswordGenerator/password-generator/generator/src/pages/LoginPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport ButtonWithSpinner from \"../components/ButtonWithSpinner\";\nimport './LoginPage.css';\nimport * as authAction from '../redux/authActions';\n\nfunction LoginPage(props) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  const [errorUsername, setErrorUsername] = useState(undefined);\n  const [errorPassword, setErrorPassword] = useState(undefined);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    if (username !== '' && errorUsername !== undefined) {\n      setErrorUsername(undefined);\n    }\n  }, [username]);\n  useEffect(() => {\n    if (password !== '' && errorPassword !== undefined) {\n      setErrorPassword(undefined);\n    }\n  }, [password]);\n\n  const onChangeUsername = e => {\n    const value = e.target.value;\n    setUsername(value);\n  };\n\n  const onChangePassword = e => {\n    const value = e.target.value;\n    setPassword(value);\n  };\n\n  const onClickLogin = () => {\n    setError(undefined);\n\n    if (!areFieldsFilled()) {\n      return;\n    }\n\n    const body = {\n      username: username,\n      password: password\n    };\n    setPendingApiCall(true);\n    props.actions.postLogin(body).then(response => {\n      setPendingApiCall(false);\n      props.history.push('/user');\n    }).catch(error => {\n      setError(error.response.data.message);\n      setPendingApiCall(false);\n    });\n  };\n\n  const areFieldsFilled = () => {\n    let result = true;\n\n    if (username === '') {\n      setErrorUsername(\"Enter username please\");\n      result = false;\n    }\n\n    if (password === '') {\n      setErrorPassword('Enter password please');\n      result = false;\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-input-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"username\",\n    value: username,\n    hasError: errorUsername && true,\n    error: errorUsername,\n    onChange: onChangeUsername,\n    disabled: pendingApiCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    hasError: errorPassword && true,\n    error: errorPassword,\n    disabled: pendingApiCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonWithSpinner, {\n    label: \"Login\",\n    disabled: pendingApiCall,\n    spinnerStatus: pendingApiCall,\n    onClick: onClickLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {\n      postLogin: user => dispatch(authAction.loginHandler(user))\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/home/wave/JS tutorials/PasswordGenerator/password-generator/generator/src/pages/LoginPage.js"],"names":["React","useEffect","useState","connect","Input","ButtonWithSpinner","authAction","LoginPage","props","username","setUsername","password","setPassword","pendingApiCall","setPendingApiCall","errorUsername","setErrorUsername","undefined","errorPassword","setErrorPassword","error","setError","onChangeUsername","e","value","target","onChangePassword","onClickLogin","areFieldsFilled","body","actions","postLogin","then","response","history","push","catch","data","message","result","mapDispatchToProps","dispatch","user","loginHandler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Input from '../components/Input';\nimport ButtonWithSpinner from \"../components/ButtonWithSpinner\";\nimport './LoginPage.css';\nimport * as authAction from '../redux/authActions';\n\nfunction LoginPage (props) {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  const [errorUsername, setErrorUsername] = useState(undefined);\n  const [errorPassword, setErrorPassword] = useState(undefined);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    if(username !== '' && errorUsername !== undefined){\n      setErrorUsername(undefined);\n    }\n  },[username]);\n\n\n  useEffect(() => {\n    if(password !== '' && errorPassword !== undefined){\n      setErrorPassword(undefined);\n    }\n  },[password]);\n\n  const onChangeUsername = (e) => {\n    const value = e.target.value;\n    setUsername(value);\n  } \n\n  const onChangePassword = (e) => {\n    const value = e.target.value;\n    setPassword(value);\n  }\n\n  const onClickLogin = () => {\n    setError(undefined);\n    if (!areFieldsFilled()){\n      return;\n    }\n    const body = {\n      username: username,\n      password: password,\n    };\n    setPendingApiCall(true);\n    props.actions.postLogin(body).then(response => {\n      setPendingApiCall(false);\n      props.history.push('/user');\n    }).catch(error => {\n      setError(error.response.data.message);\n      setPendingApiCall(false);\n    })\n  }\n\n  const areFieldsFilled = () => {\n    let result = true;\n    if(username === ''){\n      setErrorUsername(\"Enter username please\");\n      result = false;\n    }\n    if(password === ''){\n      setErrorPassword('Enter password please');\n      result = false;\n    }\n    return result;\n  }\n\n  return(\n    <div className = \"login-container\">\n      <div className = \"login-input-form\">\n        <Input \n          placeholder = \"username\"\n          value = {username}\n          hasError = {errorUsername && true}\n          error = {errorUsername}\n          onChange = {onChangeUsername}\n          disabled = {pendingApiCall}\n        />\n        <Input \n          type = \"password\" \n          placeholder = \"password\"\n          value = {password}\n          onChange = {onChangePassword}\n          hasError = {errorPassword && true}\n          error = {errorPassword}\n          disabled = {pendingApiCall}\n        />\n        <ButtonWithSpinner\n          label = \"Login\"\n          disabled = {pendingApiCall}\n          spinnerStatus = {pendingApiCall}\n          onClick = {onClickLogin}\n        />\n      </div>\n      \n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    actions: {\n      postLogin: (user) => dispatch(authAction.loginHandler(user)),\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}