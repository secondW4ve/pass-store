{"ast":null,"code":"var _jsxFileName = \"/home/wave/JS tutorials/PasswordGenerator/password-generator/generator/src/pages/LoginPage.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport ButtonWithSpinner from \"../components/ButtonWithSpinner\";\nimport './LoginPage.css';\nimport * as authAction from '../redux/authActions';\n\nfunction LoginPage(props) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const onChangeUsername = e => {\n    const value = e.target.value;\n    setUsername(value);\n  };\n\n  const onChangePassword = e => {\n    const value = e.target.value;\n    setPassword(value);\n  };\n\n  const onClickLogin = () => {\n    const body = {\n      username: username,\n      password: password\n    };\n    setPendingApiCall(true);\n    props.actions.postLogin(body).then(response => {\n      setPendingApiCall(false);\n      props.history.push('/');\n    }).catch(apiError => {\n      let errorsObj = { ...errors\n      };\n\n      if (apiError.response.data && apiError.response.data.validationErrors) {\n        errorsObj = { ...apiError.response.data.validationErrors\n        };\n      }\n\n      setErrors(errorsObj);\n      setPendingApiCall(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-input-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"username\",\n    value: username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonWithSpinner, {\n    label: \"Login\",\n    disabled: pendingApiCall,\n    spinnerStatus: pendingApiCall,\n    onClick: onClickLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {\n      postLogin: user => dispatch(authAction.loginHandler(user))\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/home/wave/JS tutorials/PasswordGenerator/password-generator/generator/src/pages/LoginPage.js"],"names":["React","useState","connect","Input","ButtonWithSpinner","authAction","LoginPage","props","username","setUsername","password","setPassword","pendingApiCall","setPendingApiCall","errors","setErrors","onChangeUsername","e","value","target","onChangePassword","onClickLogin","body","actions","postLogin","then","response","history","push","catch","apiError","errorsObj","data","validationErrors","mapDispatchToProps","dispatch","user","loginHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Input from '../components/Input';\nimport ButtonWithSpinner from \"../components/ButtonWithSpinner\";\nimport './LoginPage.css';\nimport * as authAction from '../redux/authActions';\n\nfunction LoginPage (props) {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const onChangeUsername = (e) => {\n    const value = e.target.value;\n    setUsername(value);\n  } \n\n  const onChangePassword = (e) => {\n    const value = e.target.value;\n    setPassword(value);\n  }\n\n  const onClickLogin = () => {\n    const body = {\n      username: username,\n      password: password,\n    };\n    setPendingApiCall(true);\n    props.actions.postLogin(body).then(response => {\n      setPendingApiCall(false);\n      props.history.push('/');\n    }).catch(apiError => {\n      let errorsObj = {...errors};\n      if (apiError.response.data && apiError.response.data.validationErrors){\n        errorsObj = {...apiError.response.data.validationErrors};\n      }\n      setErrors(errorsObj);\n      setPendingApiCall(false);\n    })\n    \n  }\n\n  return(\n    <div className = \"login-container\">\n      <div className = \"login-input-form\">\n        <Input \n          placeholder = \"username\"\n          value = {username}\n          onChange = {onChangeUsername}\n        />\n        <Input \n          type = \"password\" \n          placeholder = \"password\"\n          value = {password}\n          onChange = {onChangePassword}\n        />\n        <ButtonWithSpinner\n          label = \"Login\"\n          disabled = {pendingApiCall}\n          spinnerStatus = {pendingApiCall}\n          onClick = {onClickLogin}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    actions: {\n      postLogin: (user) => dispatch(authAction.loginHandler(user)),\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}